#!/bin/sh
: ${SED?}

alias sed="$SED"

# Simple case and simple BRE.
res=$(printf '%s\n' 1 2 3 | sed 's/2/two/
s/1$/,/')
case $res in
  (',
two
3') ;;
  (*) exit 9 ;;
esac

# g and p flag.
res=$(printf 'foo\n' | sed -n 's/o//g
s/z*/x/g
s/x/a/p')
case $res in
  ('afx') ;;
  (*) exit 8 ;;
esac

# Empty pattern uses last pattern.
res=$(printf '%s\n' 1 2 3 | sed '1s/1/x1/;s//z&/;2s/3/w/')
case $res in
  ('xz1
2
z3') ;;
  (*) exit 7 ;;
esac

# Numeric flag.
# From POSIX spec: "The command s/a/A/2047 should be able to
#   substitute the 2047th occurrence of a on a line."
a=aaaa
for i in 1 2 3 4 5 6 7 8 9
do
  a=$a$a
done
res=$(printf '%s\n' $a | sed 's/a/A/2047' | tr 'A' '
' | while read -r l; do echo $l | wc -c; done)
case $res in
  ('2047
2') ;;
  (*) exit 6 ;;
esac

# Combinations of flags.
res=$(printf '%s\n' 1 2 | sed -n 's/2/&&/
s/2/3/2p
s/./&&/pg')
case $res in
  ('11
23
2233') ;;
  (*) exit 5 ;;
esac

# Should work with any separator.
res=$(printf '%s\n' 1 2 | sed 's 1 a 
s;a;b;
s&b&c&
s,c,d,')
case $res in
  ('d
2') ;;
  (*) exit 4 ;;
esac

# Should allow multiple commands on one line.
res=$(printf '1\n' | sed 's/1/2/;s/2/3/')
case $res in
  ('3') ;;
  (*) exit 3 ;;
esac

mkdir -p .out
rm -f .out/s
# Allow w flag
res=$(printf '%s\n' 1 2 3 | sed 's/[12]/-&/w .out/s')
case $(cat .out/s) in
  ('-1
-2') ;;
  (*) exit 2 ;;
esac

# Embedded newline
res=$(printf '%s\n' 1 2 3 | sed 's/[12]/&\
foo/')
case $res in
  ('1
foo
2
foo
3') ;;
  (*) exit 1 ;;
esac
